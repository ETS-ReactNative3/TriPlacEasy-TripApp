{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _drawer = _interopRequireDefault(require(\"./drawer\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\VMByndR\\\\Trip\\\\screens\\\\araba.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar forgot = function (_Component) {\n  (0, _inherits2.default)(forgot, _Component);\n\n  var _super = _createSuper(forgot);\n\n  function forgot(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, forgot);\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  (0, _createClass2.default)(forgot, [{\n    key: \"render\",\n    value: function render() {\n      var ab = null;\n      var a = \"Şifreniz Mailinize Gönderildi\";\n      return _react.default.createElement(_reactNative.ScrollView, {\n        style: {\n          backgroundColor: '#f44336'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 1\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: (styles.textBody, {\n          color: 'white',\n          fontSize: 25\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }\n      }, \"\\u015Eifre Yenileme \\u0130\\xE7in\"), _react.default.createElement(_reactNative.Text, {\n        style: (styles.textBody, {\n          color: 'white',\n          fontSize: 25\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }\n      }, \"L\\xFCtfen Mailinizi Giriniz\"), _react.default.createElement(_reactNative.View, {\n        style: {\n          marginTop: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n  return forgot;\n}(_react.Component);\n\nexports.default = forgot;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 200\n  },\n  textTitle: {\n    fontFamily: 'Foundation',\n    fontSize: 40,\n    marginVertical: 10\n  },\n  textBody: {\n    fontFamily: 'Foundation',\n    fontSize: 16,\n    marginTop: 15,\n    marginBottom: 15,\n    color: 'white'\n  },\n  input: {\n    borderRadius: 15,\n    backgroundColor: 'white',\n    margin: 15,\n    height: 50,\n    width: 250,\n    borderColor: 'gray',\n    borderWidth: 1\n  },\n  item: {\n    marginBottom: 20,\n    alignItems: 'center'\n  },\n  button: {\n    backgroundColor: '#ba000d',\n    borderRadius: 15,\n    paddingVertical: 15,\n    alignItems: 'center',\n    width: 300\n  },\n  icon: {\n    position: 'absolute',\n    right: 40,\n    top: 25\n  }\n});","map":{"version":3,"sources":["C:/Users/VMByndR/Trip/screens/araba.js"],"names":["forgot","props","state","ab","a","backgroundColor","styles","container","textBody","color","fontSize","marginTop","Component","StyleSheet","create","flex","alignItems","justifyContent","textTitle","fontFamily","marginVertical","marginBottom","input","borderRadius","margin","height","width","borderColor","borderWidth","item","button","paddingVertical","icon","position","right","top"],"mappings":";;;;;;;;;;;;;;;;;AAiXA;;AACA;;AACA;;AACA;;;;;;;;;;;;IACqBA,M;;;;;AACjB,kBAAYC,KAAZ,EAAkB;AAAA;;AAAA;AACd,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAW,EAAX;AAHc;AAMjB;;;;WAKD,kBAAQ;AAIJ,UAAMC,EAAE,GAAC,IAAT;AACA,UAAMC,CAAC,GAAC,+BAAR;AACA,aACR,6BAAC,uBAAD;AAAY,QAAA,KAAK,EAAE;AAACC,UAAAA,eAAe,EAAE;AAAlB,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACY,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA,6BAAC,iBAAD;AAAM,QAAA,KAAK,GAAED,MAAM,CAACE,QAAP,EAAgB;AAACC,UAAAA,KAAK,EAAC,OAAP;AAAeC,UAAAA,QAAQ,EAAC;AAAxB,SAAlB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFA,EAGA,6BAAC,iBAAD;AAAM,QAAA,KAAK,GAAEJ,MAAM,CAACE,QAAP,EAAgB;AAACC,UAAAA,KAAK,EAAC,OAAP;AAAeC,UAAAA,QAAQ,EAAC;AAAxB,SAAlB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAHA,EAIA,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAE;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJA,CADZ,CADQ;AAwBH;;;EA1C+BC,gB;;;;AA6CpC,IAAMN,MAAM,GAAGO,wBAAWC,MAAX,CAAkB;AAC7BP,EAAAA,SAAS,EAAE;AACPQ,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE,QAHT;AAIPN,IAAAA,SAAS,EAAC;AAJH,GADkB;AAQ7BO,EAAAA,SAAS,EAAE;AACPC,IAAAA,UAAU,EAAE,YADL;AAEPT,IAAAA,QAAQ,EAAE,EAFH;AAGPU,IAAAA,cAAc,EAAE;AAHT,GARkB;AAa7BZ,EAAAA,QAAQ,EAAE;AACNW,IAAAA,UAAU,EAAE,YADN;AAENT,IAAAA,QAAQ,EAAE,EAFJ;AAGNC,IAAAA,SAAS,EAAC,EAHJ;AAINU,IAAAA,YAAY,EAAC,EAJP;AAKNZ,IAAAA,KAAK,EAAC;AALA,GAbmB;AAqB7Ba,EAAAA,KAAK,EAAE;AAEHC,IAAAA,YAAY,EAAC,EAFV;AAGLlB,IAAAA,eAAe,EAAC,OAHX;AAIFmB,IAAAA,MAAM,EAAE,EAJN;AAKHC,IAAAA,MAAM,EAAE,EALL;AAMHC,IAAAA,KAAK,EAAC,GANH;AAOFC,IAAAA,WAAW,EAAE,MAPX;AAQHC,IAAAA,WAAW,EAAE;AARV,GArBsB;AA+B5BC,EAAAA,IAAI,EAAC;AAACR,IAAAA,YAAY,EAAC,EAAd;AAAiBL,IAAAA,UAAU,EAAC;AAA5B,GA/BuB;AAgC5Bc,EAAAA,MAAM,EAAC;AAACzB,IAAAA,eAAe,EAAC,SAAjB;AAA2BkB,IAAAA,YAAY,EAAC,EAAxC;AAA2CQ,IAAAA,eAAe,EAAC,EAA3D;AAA8Df,IAAAA,UAAU,EAAC,QAAzE;AAAkFU,IAAAA,KAAK,EAAC;AAAxF,GAhCqB;AAiChCM,EAAAA,IAAI,EAAC;AAACC,IAAAA,QAAQ,EAAC,UAAV;AAAqBC,IAAAA,KAAK,EAAC,EAA3B;AAA8BC,IAAAA,GAAG,EAAC;AAAlC;AAjC2B,CAAlB,CAAf","sourcesContent":["// import React, {Component} from 'react';\r\n// import {\r\n//   View,\r\n//   StyleSheet,\r\n//   TextInput,\r\n//   Text,\r\n//   TouchableOpacity,\r\n//   ScrollView,\r\n//   Image,\r\n// } from 'react-native';\r\n// import DropDownPicker from 'react-native-dropdown-picker';\r\n// import Input from '../components/Inputs';\r\n// import Submit from '../components/Submit';\r\n// import Icon from 'react-native-vector-icons/Ionicons';\r\n// import {Formik} from 'formik';\r\n// import * as Yup from 'yup';\r\n// import {observable} from 'mobx';\r\n// import {observer, inject} from 'mobx-react';\r\n// import {API_URL} from '../config/system';\r\n// import axios from 'axios';\r\n// import LinearGradient from 'react-native-linear-gradient';\r\n\r\n// // import ConfirmGoogleCaptcha from 'react-native-google-recaptcha-v2';\r\n// // const siteKey = 'AIzaSyAaUHSs3RnNqnjURZMpCAIOBD4oHrcTNh4';\r\n// // const baseUrl = 'base_url';\r\n\r\n// export default class Araba extends Component {\r\n//   constructor() {\r\n//     super();\r\n//     this.state = {\r\n//       cars: 'seçiniz',\r\n//       yakit: 'seçiniz',\r\n//     };\r\n//   }\r\n\r\n//   _handleSubmit = values => {\r\n//     axios\r\n//       .post(`${API_URL}/api/signup`, values)\r\n//       .then(res => {\r\n//         if(res.data.code === 200)this.props.navigation.navigate('map' ,{profile: JSON.stringify(res.data.data.profile) , token: res.data.data.token});\r\n//       })\r\n//       .catch(e => {\r\n//         console.log(e);\r\n//         if(e.response.data.code === 409) alert(e.response.data.message);\r\n//         if(e.response.data.code === 422) alert(e.response.data.message);\r\n//       });\r\n//   }; \r\n//   render() {\r\n//     const {isim, mail, sifre, tell} = this.props.route.params;\r\n    \r\n// //  onMessage = event => {\r\n// //          if (event && event.nativeEvent.data) {\r\n// //             if (['cancel', 'error', 'expired'].includes(event.nativeEvent.data)) {\r\n// //                 this.captchaForm.hide();\r\n// //                 return;\r\n// //             } else {\r\n// //                 console.log('Verified code from Google', event.nativeEvent.data);\r\n// //                 setTimeout(() => {\r\n// //                     this.captchaForm.hide();\r\n// //                     // do what ever you want here\r\n// //                 }, 1500);\r\n// //             }\r\n// //         }\r\n// //     };\r\n//     return (\r\n  \r\n//       <ScrollView style={{backgroundColor: '#a9f3d3'}}>\r\n//            <LinearGradient colors={['#5c8474','#a9f3d3' ]} style={{flex:1}}>\r\n//         {/* <ConfirmGoogleCaptcha\r\n//                     ref={_ref => this.captchaForm = _ref}\r\n//                     siteKey={siteKey}\r\n                    \r\n//                     languageCode='en'\r\n//                     onMessage={this.onMessage}\r\n//                 /> */}\r\n//         <View style={styles.container}>\r\n//         {\r\n//           //Telefon NUMARASI\r\n//         /* <TouchableOpacity onPress={()=>alert(tell)} style={{position:'absolute',right:355,top:85}}>\r\n//     <Icon  name={Platform.OS === \"ios\" ? \"ios-add\" : \"arrow-back-circle-outline\"}\r\n//   //name={(this.state.hidePassword)?\"eye-off-outlane:eye-outlane\"}  şifre görünürlüğü açıp kapatma\r\n//   color=\"black\"\r\n//   size={55}/>\r\n// </TouchableOpacity> */\r\n// }\r\n//         <TouchableOpacity onPress={()=>this.props.navigation.navigate('SignUp')} style={{position:'absolute',right:'85%',top:'0%'}}>\r\n//     <Icon  name={Platform.OS === \"ios\" ? \"ios-add\" : \"arrow-back-circle-outline\"}\r\n//   //name={(this.state.hidePassword)?\"eye-off-outlane:eye-outlane\"}  şifre görünürlüğü açıp kapatma\r\n//   color=\"#8c0032\"\r\n//   size={55}/>\r\n// </TouchableOpacity> \r\n//           <Image\r\n//             source={require('../assets/car5.png')}\r\n//             resizeMode=\"center\"\r\n//             style={styles.image}\r\n//           />\r\n          \r\n//           <Text style={{ marginBottom:25, fontSize: 35,\r\n//     fontFamily: 'Foundation',\r\n//     color:'#161716'}}>Aracınızın</Text>\r\n\r\n//           <Formik\r\n//             initialValues={{\r\n//               name: isim,\r\n//               email: mail,\r\n//               phoneNumber: tell,\r\n//               password: sifre,\r\n//               licensePlate: '',\r\n//               vehicleType: '',\r\n//               fuelType: '',\r\n//             }}\r\n//             onSubmit={this._handleSubmit}\r\n//             validationSchema={Yup.object().shape({\r\n//               licensePlate: Yup.string().required(\r\n//                 '*Lütfen Plakanızı Giriniz.',\r\n//               ),\r\n//             })}>\r\n//             {({values, handleSubmit, handleChange, errors, touched}) => (\r\n             \r\n//              <View>\r\n//                 <View style={styles.item}>\r\n//                   <View style={{position: 'absolute', right: 285, top: 25}}>\r\n//                     <Icon\r\n//                       name={\r\n//                         Platform.OS === 'ios' ? 'ios-add' : 'car-sport-outline'\r\n//                       }\r\n//                       color=\"#426f5c\"\r\n//                       size={35}\r\n//                     />\r\n//                   </View>\r\n//                   <TextInput\r\n//                     value={values.licensePlate}\r\n//                     onChangeText={handleChange('licensePlate')}\r\n//                     placeholder={'P l a k a s ı'}\r\n//                     alignItems=\"center\"\r\n//                     style={styles.input}></TextInput>\r\n\r\n//                   {errors.licensePlate && touched.licensePlate && (\r\n//                     <Text style={{color: 'red'}}> {errors.licensePlate} </Text>\r\n//                   )}\r\n//                 </View>\r\n\r\n//                 <View>\r\n//                   <View style={{position: 'absolute', right: 285, top: 17}}>\r\n//                     <Icon\r\n//                       name={Platform.OS === 'ios' ? 'ios-add' : 'flame-outline'}\r\n//                       color=\"#426f5c\"\r\n//                       size={35}\r\n//                     />\r\n//                   </View>\r\n//                   <DropDownPicker\r\n//                     items={[\r\n//                       {\r\n//                         label: 'Dizel',\r\n//                         value: 'dizel',\r\n//                         icon: () => (\r\n//                           <Icon\r\n//                             name={\r\n//                               Platform.OS === 'ios'\r\n//                                 ? 'ios-add'\r\n//                                 : 'flame-outline'\r\n//                             }\r\n//                             color=\"red\"\r\n//                             size={18}\r\n//                           />\r\n//                         ),\r\n//                       },\r\n//                       {\r\n//                         label: 'Benzin',\r\n//                         value: 'benzin',\r\n//                         icon: () => (\r\n//                           <Icon\r\n//                             name={\r\n//                               Platform.OS === 'ios'\r\n//                                 ? 'ios-add'\r\n//                                 : 'beaker'\r\n//                             }\r\n//                             color=\"blue\"\r\n//                             size={18}\r\n//                           />\r\n//                         ),\r\n//                       },\r\n//                       {\r\n//                         label: 'Elektrik',\r\n//                         value: 'elektrik',\r\n//                         icon: () => (\r\n//                           <Icon\r\n//                             name={\r\n//                               Platform.OS === 'ios'\r\n//                                 ? 'ios-add'\r\n//                                 : 'battery-charging-outline'\r\n//                             }\r\n//                             color=\"orange\"\r\n//                             size={18}\r\n//                           />\r\n//                         ),\r\n//                       },\r\n//                       {\r\n//                         label: 'LPG',\r\n//                         value: 'lpg',\r\n//                         icon: () => (\r\n//                           <Icon\r\n//                             name={\r\n//                               Platform.OS === 'ios'\r\n//                                 ? 'ios-add'\r\n//                                 : 'pint-outline'\r\n//                             }\r\n//                             color=\"green\"\r\n//                             size={18}\r\n//                           />\r\n//                         ),\r\n//                       },\r\n//                       {label: 'Yakıt Türünü Seçiniz...', value: 'seçiniz'},\r\n//                     ]}\r\n//                     defaultValue={this.state.yakit}\r\n//                     containerStyle={{\r\n//                       marginLeft: '20%',\r\n//                       marginTop: 10,\r\n//                       marginBottom: 25,\r\n//                       height: 55,\r\n//                       width: 180,\r\n//                     }}\r\n//                     style={{backgroundColor: '#fafafa'}}\r\n//                     itemStyle={{\r\n//                       justifyContent: 'flex-start',\r\n//                     }}\r\n//                     dropDownStyle={{backgroundColor: '#fafafa'}}\r\n//                     onChangeItem={items => {\r\n//                       console.log(items.value);\r\n//                       values.fuelType = items.value;\r\n\r\n//                       this.setState({yakit: items.value});\r\n//                     }}\r\n//                   />\r\n//                   {\r\n//                     //(errors.vehicleType)&&<Text style={{color:'red',marginLeft:65}}> {errors.vehicleType} </Text>\r\n//                   }\r\n//                 </View>\r\n\r\n//                 <View>\r\n//                   <View style={{position: 'absolute', right: 285, top: 33}}>\r\n//                     <Icon\r\n//                       name={Platform.OS === 'ios' ? 'ios-add' : 'car-outline'}\r\n//                       color=\"#426f5c\"\r\n//                       size={35}\r\n//                     />\r\n//                   </View>\r\n//                   <DropDownPicker\r\n//                     items={[\r\n//                       {label: 'Sedan', value: 'sedan'},\r\n//                       {label: 'Hatchback', value: 'hatc'},\r\n//                       {label: 'Station Wagon', value: 'sta'},\r\n//                       {label: 'Cabrio', value: 'cabrio'},\r\n//                       {label: 'Pick Up', value: 'pup'},\r\n//                       {label: 'SUV', value: 'suv'},\r\n//                       {label: 'Diğer', value: 'diger'},\r\n//                       {label: 'Araç Türünü Seçiniz... ', value: 'seçiniz'},\r\n//                     ]}\r\n//                     defaultValue={this.state.cars}\r\n//                     containerStyle={{\r\n//                       marginLeft: '20%',\r\n//                       marginBottom: 25,\r\n//                       marginTop: 25,\r\n//                       height: 55,\r\n//                       width: 180,\r\n//                     }}\r\n//                     style={{backgroundColor: '#fafafa'}}\r\n//                     itemStyle={{\r\n//                       justifyContent: 'flex-start',\r\n//                     }}\r\n//                     dropDownStyle={{\r\n//                       backgroundColor: 'white',\r\n//                       borderBottomColor: 'black',\r\n//                       height: 100,\r\n//                     }}\r\n//                     onChangeItem={items => {\r\n//                       values.vehicleType = items.value;\r\n//                       this.setState({\r\n//                         cars: items.value,\r\n//                       });\r\n//                     }}\r\n//                   />\r\n//                 </View>\r\n\r\n//                 {\r\n//                   //(errors.fuelType)&&<Text style={{color:'red',justifyContent:'center',marginLeft:65}}> {errors.fuelType}</Text>\r\n//                 }\r\n\r\n//                 {\r\n//                   //console.log(this.state.cars)\r\n//                 }\r\n\r\n//                 <View\r\n//                   style={{\r\n//                     alignItems: 'center',\r\n//                     marginBottom: 50,\r\n//                     marginTop: 50,\r\n//                     justifyContent: 'center'\r\n//                   }}>\r\n//                   <TouchableOpacity\r\n//                     onPress={handleSubmit}\r\n//                     style={styles.button}>\r\n//                     <Text style={{color: '#8c0032',fontSize: 20}}>\r\n//                       Hesap Oluştur\r\n//                     </Text>\r\n//                   </TouchableOpacity>\r\n//                 </View>\r\n//               </View>\r\n//             )}\r\n//           </Formik>\r\n\r\n//           <View style={{flexDirection: 'row'}}>\r\n//             <Text style={styles.textBody}>Zaten hesabın var mı?</Text>\r\n//             <Text\r\n//               style={[styles.textBody, {color: '#08467C'}]}\r\n//               onPress={() => this.props.navigation.navigate('Login')}>\r\n//               {' '}\r\n//               Giriş Yap\r\n//             </Text>\r\n//           </View>\r\n//         </View>\r\n//         </LinearGradient>\r\n//       </ScrollView>\r\n//     );\r\n//   }\r\n// }\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     alignItems: 'center',\r\n//   },\r\n//   image: {\r\n//     resizeMode: 'contain',\r\n//     width: '75%',\r\n//     height: 150,\r\n//     marginVertical: 10,\r\n//   },\r\n//   textTitle: {\r\n//     fontSize: 40,\r\n//     fontFamily: 'Foundation',\r\n//     marginVertical: 5,\r\n//     marginBottom:15,\r\n//     color:'#8c0032'\r\n//   },\r\n//   textBody: {\r\n//     fontSize: 16,\r\n//     fontFamily: 'Foundation',\r\n//     color:'#bc477b'\r\n//   },\r\n//   input: {\r\n//     borderRadius: 7,\r\n//     backgroundColor: 'white',\r\n//     margin: 15,\r\n//     height: 55,\r\n//     width: 180,\r\n//   }, //#009999\r\n//   item: {marginBottom: 20, alignItems: 'center'},\r\n//   button: {\r\n//     backgroundColor: '#bbb5c3',\r\n//     borderRadius: 15,\r\n//     paddingVertical: 7,\r\n//     alignItems: 'center',\r\n//     width: 300,\r\n//     height:63,\r\n//     justifyContent: 'center'\r\n//   },\r\n//   icon: {position: 'absolute', right: 35, top: 25},\r\n// });\r\n\r\nimport React,{Component}from 'react';\r\nimport {View, BackHandler ,StyleSheet,TextInput, Text, TouchableOpacity,ScrollView, Image} from 'react-native';\r\nimport { TouchableHighlight } from 'react-native-gesture-handler';\r\nimport Drawer from './drawer'\r\nexport default class forgot extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state={\r\n           \r\n        }\r\n    }\r\n    \r\n          \r\n    \r\n     \r\n    render(){ \r\n        \r\n    \r\n        \r\n        const ab=null\r\n        const a=\"Şifreniz Mailinize Gönderildi\"\r\n        return(\r\n<ScrollView style={{backgroundColor: '#f44336'}}>\r\n            <View style={styles.container}>\r\n        \r\n            <Text style={styles.textBody,{color:'white',fontSize:25}}>Şifre Yenileme İçin</Text>\r\n            <Text style={styles.textBody,{color:'white',fontSize:25}}>Lütfen Mailinizi Giriniz</Text>\r\n            <View style={{marginTop: 20}} />\r\n         \r\n         \r\n           \r\n\r\n\r\n\r\n           \r\n            \r\n            \r\n          \r\n           \r\n        </View>\r\n\r\n        </ScrollView>\r\n        \r\n        )\r\n      \r\n    }\r\n    \r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginTop:200\r\n    },\r\n  \r\n    textTitle: {\r\n        fontFamily: 'Foundation',\r\n        fontSize: 40,\r\n        marginVertical: 10,\r\n    },\r\n    textBody: {\r\n        fontFamily: 'Foundation',\r\n        fontSize: 16,\r\n        marginTop:15,\r\n        marginBottom:15,\r\n        color:'white'\r\n    },\r\n    \r\n    input: {\r\n        \r\n        borderRadius:15,\r\n      backgroundColor:'white'\r\n      ,  margin: 15,\r\n        height: 50,\r\n        width:250\r\n        ,borderColor: 'gray',\r\n        borderWidth: 1\r\n     },\r\n     item:{marginBottom:20,alignItems:'center'},\r\n     button:{backgroundColor:'#ba000d',borderRadius:15,paddingVertical:15,alignItems:'center',width:300}\r\n,icon:{position:'absolute',right:40,top:25}\r\n     \r\n});"]},"metadata":{},"sourceType":"script"}