{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.methods = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _results = require(\"./results\");\n\nvar _unsupportedPlatformMethods = require(\"./unsupportedPlatformMethods\");\n\nfunction check() {\n  return _regenerator.default.async(function check$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", _results.RESULTS.UNAVAILABLE);\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction checkNotifications() {\n  return _regenerator.default.async(function checkNotifications$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", {\n            status: _results.RESULTS.UNAVAILABLE,\n            settings: {}\n          });\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction checkMultiple(permissions) {\n  return _regenerator.default.async(function checkMultiple$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", permissions.reduce(function (acc, permission) {\n            acc[permission] = _results.RESULTS.UNAVAILABLE;\n            return acc;\n          }, {}));\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar methods = {\n  check: check,\n  checkLocationAccuracy: _unsupportedPlatformMethods.checkLocationAccuracy,\n  checkMultiple: checkMultiple,\n  checkNotifications: checkNotifications,\n  openLimitedPhotoLibraryPicker: _unsupportedPlatformMethods.openLimitedPhotoLibraryPicker,\n  openSettings: Promise.reject,\n  request: check,\n  requestLocationAccuracy: _unsupportedPlatformMethods.requestLocationAccuracy,\n  requestMultiple: checkMultiple,\n  requestNotifications: checkNotifications\n};\nexports.methods = methods;","map":{"version":3,"sources":["methods.ts"],"names":["RESULTS","status","settings","acc","methods","check","checkLocationAccuracy","checkMultiple","checkNotifications","openLimitedPhotoLibraryPicker","openSettings","Promise","request","requestLocationAccuracy","requestMultiple","requestNotifications"],"mappings":";;;;;;;;;AACA;;AAEA;;AAMA,SAAA,KAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACSA,iBAAP,WADF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAA,kBAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CACS;AAACC,YAAAA,MAAM,EAAED,iBAAT,WAAA;AAA8BE,YAAAA,QAAQ,EAAE;AAAxC,WADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAA,aAAA,CAAA,WAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAGS,WAAW,CAAX,MAAA,CAAmB,UAAA,GAAA,EAAA,UAAA,EAAgC;AACxDC,YAAAA,GAAG,CAAHA,UAAG,CAAHA,GAAkBH,iBAAlBG,WAAAA;AACA,mBAAA,GAAA;AAFK,WAAA,EAAP,EAAO,CAHT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASO,IAAMC,OAAiB,GAAG;AAC/BC,EAAAA,KAD+B,EAC/BA,KAD+B;AAE/BC,EAAAA,qBAF+B,EAE/BA,iDAF+B;AAG/BC,EAAAA,aAH+B,EAG/BA,aAH+B;AAI/BC,EAAAA,kBAJ+B,EAI/BA,kBAJ+B;AAK/BC,EAAAA,6BAL+B,EAK/BA,yDAL+B;AAM/BC,EAAAA,YAAY,EAAEC,OAAO,CANU,MAAA;AAO/BC,EAAAA,OAAO,EAPwB,KAAA;AAQ/BC,EAAAA,uBAR+B,EAQ/BA,mDAR+B;AAS/BC,EAAAA,eAAe,EATgB,aAAA;AAU/BC,EAAAA,oBAAoB,EAAEP;AAVS,CAA1B","sourcesContent":["import type {Contract} from './contract';\nimport {RESULTS} from './results';\nimport type {NotificationsResponse, Permission, PermissionStatus} from './types';\nimport {\n  checkLocationAccuracy,\n  openLimitedPhotoLibraryPicker,\n  requestLocationAccuracy,\n} from './unsupportedPlatformMethods';\n\nasync function check(): Promise<PermissionStatus> {\n  return RESULTS.UNAVAILABLE;\n}\n\nasync function checkNotifications(): Promise<NotificationsResponse> {\n  return {status: RESULTS.UNAVAILABLE, settings: {}};\n}\n\nasync function checkMultiple<P extends Permission[]>(\n  permissions: P,\n): Promise<Record<P[number], PermissionStatus>> {\n  return permissions.reduce((acc, permission: P[number]) => {\n    acc[permission] = RESULTS.UNAVAILABLE;\n    return acc;\n  }, {} as Record<P[number], PermissionStatus>);\n}\n\nexport const methods: Contract = {\n  check,\n  checkLocationAccuracy,\n  checkMultiple,\n  checkNotifications,\n  openLimitedPhotoLibraryPicker,\n  openSettings: Promise.reject,\n  request: check,\n  requestLocationAccuracy,\n  requestMultiple: checkMultiple,\n  requestNotifications: checkNotifications,\n};\n"]},"metadata":{},"sourceType":"script"}