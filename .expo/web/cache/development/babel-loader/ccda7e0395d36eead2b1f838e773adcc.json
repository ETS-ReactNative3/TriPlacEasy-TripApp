{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Ionicons = _interopRequireDefault(require(\"react-native-vector-icons/Ionicons\"));\n\nvar _geolocation = _interopRequireDefault(require(\"@react-native-community/geolocation\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _reactNativeMaps = _interopRequireWildcard(require(\"react-native-maps\"));\n\nvar _reactNativeMapsDirections = _interopRequireDefault(require(\"react-native-maps-directions\"));\n\nvar _reactNativePermissions = require(\"react-native-permissions\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\VMByndR\\\\Trip\\\\screens\\\\Cities\\\\\\u0130stanbul\\\\mapIst.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar mapIst = function (_Component) {\n  (0, _inherits2.default)(mapIst, _Component);\n\n  var _super = _createSuper(mapIst);\n\n  function mapIst(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, mapIst);\n    _this = _super.call(this, props);\n    _this.state = {\n      latitude: '',\n      longitude: ''\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(mapIst, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var LocationPer = _reactNative.Platform.select({\n        android: _reactNativePermissions.PERMISSIONS.ANDROID.ACCESS_FINE_LOCATION,\n        ios: _reactNativePermissions.PERMISSIONS.IOS.ACCESS_FINE_LOCATION\n      });\n\n      var micPer = _reactNative.Platform.select({\n        android: _reactNativePermissions.PERMISSIONS.ANDROID.RECORD_AUDIO\n      });\n\n      (0, _reactNativePermissions.requestMultiple)([LocationPer, micPer]).then(function (status) {\n        console.log('Location', status[LocationPer]);\n      });\n      (0, _reactNativePermissions.check)(_reactNative.Platform.select({\n        android: _reactNativePermissions.PERMISSIONS.ANDROID.ACCESS_FINE_LOCATION,\n        ios: _reactNativePermissions.PERMISSIONS.IOS.ACCESS_FINE_LOCATION\n      })).then(function (res) {\n        if (res == 'blocked') {\n          (0, _reactNativePermissions.openSettings)().catch(function (e) {\n            return console.log(e);\n          });\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n\n      _geolocation.default.getCurrentPosition(function (position) {\n        var _position$coords = position.coords,\n            latitude = _position$coords.latitude,\n            longitude = _position$coords.longitude;\n\n        _this2.setState({\n          latitude: latitude,\n          longitude: longitude\n        });\n\n        console.log(position);\n      }, function (error) {\n        console.log(error);\n      }, {\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 10000\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          latitude = _this$state.latitude,\n          longitude = _this$state.longitude,\n          carParks = _this$state.carParks,\n          carPark1 = _this$state.carPark1;\n      var longitude1 = longitude;\n      var latitude1 = latitude;\n      {\n        console.log(latitude1);\n      }\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          width: '100%',\n          height: 48,\n          backgroundColor: '#adf6d6'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          marginTop: -10,\n          color: 'black',\n          fontSize: 45\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }\n      }, \"ISTANBUL\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.props.navigation.openDrawer();\n        },\n        style: {\n          position: 'absolute',\n          right: '85%',\n          top: '-10%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_Ionicons.default, {\n        name: _reactNative.Platform.OS === \"ios\" ? \"ios-add\" : \"menu-outline\",\n        color: \"black\",\n        size: 55,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 5\n        }\n      })), _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.props.navigation.navigate('Login');\n        },\n        style: {\n          position: 'absolute',\n          right: '0%',\n          top: '-10%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        source: require('../../../assets/TripLogo.png'),\n        resizeMode: \"center\",\n        style: styles.image2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 12\n        }\n      }))), _react.default.createElement(_reactNativeMaps.default, {\n        style: styles.map,\n        provider: _reactNativeMaps.PROVIDER_GOOGLE,\n        region: {\n          latitude: Number(latitude),\n          longitude: Number(longitude),\n          latitudeDelta: 0.058,\n          longitudeDelta: 0.0581\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNativeMaps.Marker, {\n        pinColor: 'blue',\n        title: 'KONUMUNUZ',\n        opacity: 1.5,\n        description: 'Your Location',\n        coordinate: {\n          latitude: Number(latitude),\n          longitude: Number(longitude),\n          latitudeDelta: 0.115,\n          longitudeDelta: 0.1121\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }\n      }), _react.default.createElement(_reactNativeMaps.Marker, {\n        pinColor: '#adf6d6',\n        onPress: function onPress() {\n          return _this3.props.navigation.navigate('galataTower', {\n            latitude2: latitude1,\n            longitude2: longitude1\n          });\n        },\n        title: 'Galata Kulesi',\n        opacity: 1.5,\n        description: 'Galata Tower',\n        coordinate: {\n          latitude: Number(latitude) - 0.03,\n          longitude: Number(longitude) - 0.01,\n          latitudeDelta: 0.115,\n          longitudeDelta: 0.1121\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 1\n        }\n      }), _react.default.createElement(_reactNativeMaps.Marker, {\n        pinColor: 'teal',\n        title: 'Ayasofya Camii',\n        onPress: function onPress() {\n          return _this3.props.navigation.navigate('Ayasofya', {\n            latitude2: latitude1,\n            longitude2: longitude1\n          });\n        },\n        opacity: 1.5,\n        description: 'Ayasofya Mosque',\n        coordinate: {\n          latitude: Number(latitude) - 0.01,\n          longitude: Number(longitude) + 0.02,\n          latitudeDelta: 0.115,\n          longitudeDelta: 0.1121\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }\n      }), _react.default.createElement(_reactNativeMaps.Marker, {\n        pinColor: 'teal',\n        title: 'Topkapı Sarayı',\n        onPress: function onPress() {\n          return _this3.props.navigation.navigate('Topkapi', {\n            latitude2: latitude1,\n            longitude2: longitude1\n          });\n        },\n        opacity: 1.5,\n        description: 'Topkapi Palace',\n        coordinate: {\n          latitude: Number(latitude) - 0.01,\n          longitude: Number(longitude) + 0.025,\n          latitudeDelta: 0.115,\n          longitudeDelta: 0.1121\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 12\n        }\n      }), _react.default.createElement(_reactNativeMaps.Marker, {\n        pinColor: 'teal',\n        title: 'Sultanahmet Camii',\n        onPress: function onPress() {\n          return _this3.props.navigation.navigate('Sultanahmet', {\n            latitude2: latitude1,\n            longitude2: longitude1\n          });\n        },\n        opacity: 1.5,\n        description: 'Blue Mosque',\n        coordinate: {\n          latitude: Number(latitude) - 0.009,\n          longitude: Number(longitude) + 0.01,\n          latitudeDelta: 0.115,\n          longitudeDelta: 0.1121\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n  return mapIst;\n}(_react.Component);\n\nexports.default = mapIst;\n\nvar styles = _reactNative.StyleSheet.create({\n  page: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF'\n  },\n  container: {\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%'\n  },\n  map: {\n    flex: 1\n  },\n  image2: {\n    resizeMode: 'contain',\n    width: 50,\n    height: 50,\n    marginTop: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/VMByndR/Trip/screens/Cities/İstanbul/mapIst.js"],"names":["mapIst","props","state","latitude","longitude","LocationPer","Platform","select","android","PERMISSIONS","ANDROID","ACCESS_FINE_LOCATION","ios","IOS","micPer","RECORD_AUDIO","then","status","console","log","res","catch","e","Geolocation","getCurrentPosition","position","coords","setState","error","enableHighAccuracy","timeout","maximumAge","carParks","carPark1","longitude1","latitude1","styles","container","width","height","backgroundColor","alignItems","justifyContent","marginTop","color","fontSize","navigation","openDrawer","right","top","OS","navigate","require","image2","map","PROVIDER_GOOGLE","Number","latitudeDelta","longitudeDelta","latitude2","longitude2","Component","StyleSheet","create","page","flex","resizeMode"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AAgBA;;AACA;;AACA;;AACA;;AAOA;;AACA;;;;;;;;;;;;IAGqBA,M;;;;;AACnB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAFiB;AASlB;;;;WAED,6BAAoB;AAAA;;AAElB,UAAMC,WAAW,GACfC,sBAASC,MAAT,CAAgB;AAEZC,QAAAA,OAAO,EAACC,oCAAYC,OAAZ,CAAoBC,oBAFhB;AAGXC,QAAAA,GAAG,EAACH,oCAAYI,GAAZ,CAAgBF;AAHT,OAAhB,CADF;;AAOE,UAAMG,MAAM,GAERR,sBAASC,MAAT,CAAgB;AAExBC,QAAAA,OAAO,EAACC,oCAAYC,OAAZ,CAAoBK;AAFJ,OAAhB,CAFJ;;AAOA,mDAAgB,CAACV,WAAD,EAAaS,MAAb,CAAhB,EAAsCE,IAAtC,CAA2C,UAACC,MAAD,EAAU;AAC3DC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBF,MAAM,CAACZ,WAAD,CAA7B;AAEC,OAHK;AAKN,yCAAMC,sBAASC,MAAT,CAAgB;AAElBC,QAAAA,OAAO,EAACC,oCAAYC,OAAZ,CAAoBC,oBAFV;AAGjBC,QAAAA,GAAG,EAACH,oCAAYI,GAAZ,CAAgBF;AAHH,OAAhB,CAAN,EAKCK,IALD,CAKM,UAACI,GAAD,EAAO;AAEV,YAAGA,GAAG,IAAE,SAAR,EAAkB;AAEnB,sDAAeC,KAAf,CAAqB,UAACC,CAAD;AAAA,mBAAKJ,OAAO,CAACC,GAAR,CAAYG,CAAZ,CAAL;AAAA,WAArB;AACE;AACH,OAXD,EAYCD,KAZD,CAYO,UAACC,CAAD,EAAK;AACRJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AAEH,OAfD;;AAkBIC,2BAAYC,kBAAZ,CACE,UAAAC,QAAQ,EAAI;AACV,+BAEIA,QAFJ,CACEC,MADF;AAAA,YACWvB,QADX,oBACWA,QADX;AAAA,YACqBC,SADrB,oBACqBA,SADrB;;AAGA,QAAA,MAAI,CAACuB,QAAL,CAAc;AAACxB,UAAAA,QAAQ,EAARA,QAAD;AAAWC,UAAAA,SAAS,EAATA;AAAX,SAAd;;AACAc,QAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACD,OAPH,EAQE,UAAAG,KAAK,EAAI;AACPV,QAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,OAVH,EAWE;AAACC,QAAAA,kBAAkB,EAAE,IAArB;AAA2BC,QAAAA,OAAO,EAAE,KAApC;AAA0CC,QAAAA,UAAU,EAAC;AAArD,OAXF;AAkBD;;;WAED,kBAAS;AAAA;;AAEP,wBAAkD,KAAK7B,KAAvD;AAAA,UAAOC,QAAP,eAAOA,QAAP;AAAA,UAAiBC,SAAjB,eAAiBA,SAAjB;AAAA,UAA4B4B,QAA5B,eAA4BA,QAA5B;AAAA,UAAsCC,QAAtC,eAAsCA,QAAtC;AACD,UAAMC,UAAU,GAAE9B,SAAlB;AACA,UAAM+B,SAAS,GAAEhC,QAAjB;AACD;AAACe,QAAAA,OAAO,CAACC,GAAR,CAAYgB,SAAZ;AAAuB;AAEtB,aACE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE,MAAR;AAAgBC,UAAAA,MAAM,EAAE,EAAxB;AAA2BC,UAAAA,eAAe,EAAC;AAA3C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAE,QAAb;AAAsBC,UAAAA,cAAc,EAAE;AAAtC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAG;AAACC,UAAAA,SAAS,EAAC,CAAC,EAAZ;AAAeC,UAAAA,KAAK,EAAE,OAAtB;AAA+BC,UAAAA,QAAQ,EAAE;AAAzC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,CADF,EAME,6BAAC,6BAAD;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAAC5C,KAAL,CAAW6C,UAAX,CAAsBC,UAAtB,EAAJ;AAAA,SAA3B;AAAmE,QAAA,KAAK,EAAE;AAACtB,UAAAA,QAAQ,EAAC,UAAV;AAAqBuB,UAAAA,KAAK,EAAC,KAA3B;AAAiCC,UAAAA,GAAG,EAAC;AAArC,SAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN,6BAAC,iBAAD;AAAO,QAAA,IAAI,EAAE3C,sBAAS4C,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAoC,cAAjD;AACF,QAAA,KAAK,EAAC,OADJ;AAEF,QAAA,IAAI,EAAE,EAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,CANF,EAWE,6BAAC,6BAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACjD,KAAL,CAAW6C,UAAX,CAAsBK,QAAtB,CAA+B,OAA/B,CAAN;AAAA,SADX;AAEE,QAAA,KAAK,EAAE;AAAC1B,UAAAA,QAAQ,EAAE,UAAX;AAAuBuB,UAAAA,KAAK,EAAE,IAA9B;AAAoCC,UAAAA,GAAG,EAAE;AAAzC,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGC,6BAAC,kBAAD;AACC,QAAA,MAAM,EAAEG,OAAO,CAAC,8BAAD,CADhB;AAEC,QAAA,UAAU,EAAC,QAFZ;AAGC,QAAA,KAAK,EAAEhB,MAAM,CAACiB,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD,CAXF,CAFF,EAwBE,6BAAC,wBAAD;AACE,QAAA,KAAK,EAAEjB,MAAM,CAACkB,GADhB;AAEE,QAAA,QAAQ,EAAEC,gCAFZ;AAGE,QAAA,MAAM,EAAE;AACNpD,UAAAA,QAAQ,EAAEqD,MAAM,CAACrD,QAAD,CADV;AAENC,UAAAA,SAAS,EAAEoD,MAAM,CAACpD,SAAD,CAFX;AAGNqD,UAAAA,aAAa,EAAE,KAHT;AAINC,UAAAA,cAAc,EAAE;AAJV,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SA+BE,6BAAC,uBAAD;AACE,QAAA,QAAQ,EAAE,MADZ;AAEE,QAAA,KAAK,EAAE,WAFT;AAGE,QAAA,OAAO,EAAE,GAHX;AAIE,QAAA,WAAW,EAAE,eAJf;AAKE,QAAA,UAAU,EAAE;AACVvD,UAAAA,QAAQ,EAAEqD,MAAM,CAACrD,QAAD,CADN;AAEVC,UAAAA,SAAS,EAAEoD,MAAM,CAACpD,SAAD,CAFP;AAGVqD,UAAAA,aAAa,EAAE,KAHL;AAIVC,UAAAA,cAAc,EAAE;AAJN,SALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/BF,EA2CR,6BAAC,uBAAD;AACY,QAAA,QAAQ,EAAE,SADtB;AAEY,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACzD,KAAL,CAAW6C,UAAX,CAAsBK,QAAtB,CAA+B,aAA/B,EAA6C;AAACQ,YAAAA,SAAS,EAACxB,SAAX;AAAqByB,YAAAA,UAAU,EAAC1B;AAAhC,WAA7C,CAAN;AAAA,SAFrB;AAGY,QAAA,KAAK,EAAE,eAHnB;AAIY,QAAA,OAAO,EAAE,GAJrB;AAKY,QAAA,WAAW,EAAE,cALzB;AAMY,QAAA,UAAU,EAAE;AACV/B,UAAAA,QAAQ,EAAEqD,MAAM,CAACrD,QAAD,CAAN,GAAiB,IADjB;AAEVC,UAAAA,SAAS,EAAEoD,MAAM,CAACpD,SAAD,CAAN,GAAkB,IAFnB;AAGVqD,UAAAA,aAAa,EAAE,KAHL;AAIVC,UAAAA,cAAc,EAAE;AAJN,SANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3CQ,EAwDE,6BAAC,uBAAD;AACE,QAAA,QAAQ,EAAE,MADZ;AAEE,QAAA,KAAK,EAAE,gBAFT;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACzD,KAAL,CAAW6C,UAAX,CAAsBK,QAAtB,CAA+B,UAA/B,EAA0C;AAACQ,YAAAA,SAAS,EAACxB,SAAX;AAAqByB,YAAAA,UAAU,EAAC1B;AAAhC,WAA1C,CAAJ;AAAA,SAHX;AAIE,QAAA,OAAO,EAAE,GAJX;AAKE,QAAA,WAAW,EAAE,iBALf;AAME,QAAA,UAAU,EAAE;AACV/B,UAAAA,QAAQ,EAAEqD,MAAM,CAACrD,QAAD,CAAN,GAAiB,IADjB;AAEVC,UAAAA,SAAS,EAAEoD,MAAM,CAACpD,SAAD,CAAN,GAAkB,IAFnB;AAGVqD,UAAAA,aAAa,EAAE,KAHL;AAIVC,UAAAA,cAAc,EAAE;AAJN,SANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxDF,EAqEG,6BAAC,uBAAD;AACC,QAAA,QAAQ,EAAE,MADX;AAEC,QAAA,KAAK,EAAE,gBAFR;AAGC,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACzD,KAAL,CAAW6C,UAAX,CAAsBK,QAAtB,CAA+B,SAA/B,EAAyC;AAACQ,YAAAA,SAAS,EAACxB,SAAX;AAAqByB,YAAAA,UAAU,EAAC1B;AAAhC,WAAzC,CAAJ;AAAA,SAHV;AAIC,QAAA,OAAO,EAAE,GAJV;AAKC,QAAA,WAAW,EAAE,gBALd;AAMC,QAAA,UAAU,EAAE;AACV/B,UAAAA,QAAQ,EAAEqD,MAAM,CAACrD,QAAD,CAAN,GAAiB,IADjB;AAEVC,UAAAA,SAAS,EAAEoD,MAAM,CAACpD,SAAD,CAAN,GAAkB,KAFnB;AAGVqD,UAAAA,aAAa,EAAE,KAHL;AAIVC,UAAAA,cAAc,EAAE;AAJN,SANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArEH,EAkFE,6BAAC,uBAAD;AACE,QAAA,QAAQ,EAAE,MADZ;AAEE,QAAA,KAAK,EAAE,mBAFT;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACzD,KAAL,CAAW6C,UAAX,CAAsBK,QAAtB,CAA+B,aAA/B,EAA6C;AAACQ,YAAAA,SAAS,EAACxB,SAAX;AAAqByB,YAAAA,UAAU,EAAC1B;AAAhC,WAA7C,CAAJ;AAAA,SAHX;AAIE,QAAA,OAAO,EAAE,GAJX;AAKE,QAAA,WAAW,EAAE,aALf;AAME,QAAA,UAAU,EAAE;AACV/B,UAAAA,QAAQ,EAAEqD,MAAM,CAACrD,QAAD,CAAN,GAAiB,KADjB;AAEVC,UAAAA,SAAS,EAAEoD,MAAM,CAACpD,SAAD,CAAN,GAAkB,IAFnB;AAGVqD,UAAAA,aAAa,EAAE,KAHL;AAIVC,UAAAA,cAAc,EAAE;AAJN,SANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlFF,CAxBF,CADF;AA6LD;;;EA3QiCG,gB;;;;AA6QpC,IAAMzB,MAAM,GAAG0B,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,CADF;AAEJvB,IAAAA,cAAc,EAAE,QAFZ;AAGJD,IAAAA,UAAU,EAAE,QAHR;AAIJD,IAAAA,eAAe,EAAE;AAJb,GADyB;AAO/BH,EAAAA,SAAS,EAAE;AACTK,IAAAA,cAAc,EAAE,QADP;AAETH,IAAAA,MAAM,EAAE,MAFC;AAGTD,IAAAA,KAAK,EAAE;AAHE,GAPoB;AAY/BgB,EAAAA,GAAG,EAAE;AACHW,IAAAA,IAAI,EAAE;AADH,GAZ0B;AAe/BZ,EAAAA,MAAM,EAAE;AAENa,IAAAA,UAAU,EAAE,SAFN;AAGN5B,IAAAA,KAAK,EAAE,EAHD;AAINC,IAAAA,MAAM,EAAE,EAJF;AAKNI,IAAAA,SAAS,EAAC;AALJ;AAfuB,CAAlB,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  StatusBar,\r\n  SafeAreaView,\r\n  Touchable,\r\n  Image,\r\n  Alert,\r\n  PermissionsAndroid,\r\n  TouchableOpacity,\r\n  Platform,\r\n  Modal,\r\n  Button,\r\n} from 'react-native';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport Geolocation from '@react-native-community/geolocation';\r\nimport axios from 'axios';\r\nimport MapView, {\r\n  PROVIDER_GOOGLE,\r\n  Marker,\r\n  Polygon,\r\n  Circle,\r\n} from 'react-native-maps';\r\n//import MapView from \"react-native-map-clustering\";\r\nimport MapViewDirections from 'react-native-maps-directions';\r\nimport {check,checkMultiple, PERMISSIONS,request,requestMultiple,openSettings,checkNotifications,requestNotifications} from 'react-native-permissions';\r\n\r\n\r\nexport default class mapIst extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      latitude: '',\r\n      longitude: '',\r\n      \r\n     \r\n      \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n \r\n    const LocationPer=( \r\n      Platform.select({\r\n  \r\n          android:PERMISSIONS.ANDROID.ACCESS_FINE_LOCATION\r\n          ,ios:PERMISSIONS.IOS.ACCESS_FINE_LOCATION })\r\n      )\r\n  \r\n      const micPer=(\r\n          \r\n          Platform.select({\r\n  \r\n  android:PERMISSIONS.ANDROID.RECORD_AUDIO })\r\n  \r\n      )\r\n      requestMultiple([LocationPer,micPer]).then((status)=>{\r\nconsole.log('Location',status[LocationPer])\r\n\r\n})\r\n       \r\ncheck(Platform.select({\r\n\r\n    android:PERMISSIONS.ANDROID.ACCESS_FINE_LOCATION\r\n    ,ios:PERMISSIONS.IOS.ACCESS_FINE_LOCATION\r\n}))\r\n.then((res)=>{\r\n//İZİN ALMAK İÇİN AYARLARA YÖNLENDİRME\r\n   if(res=='blocked'){\r\n    \r\n  openSettings().catch((e)=>console.log(e))\r\n   }\r\n})\r\n.catch((e)=>{\r\n    console.log(e)\r\n    \r\n})\r\n    //KONUM\r\n    ;\r\n    Geolocation.getCurrentPosition(\r\n      position => {\r\n        const {\r\n          coords: {latitude, longitude},\r\n        } = position;\r\n        this.setState({latitude, longitude});\r\n        console.log(position);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      },\r\n      {enableHighAccuracy: true, timeout: 10000,maximumAge:10000},\r\n      //options methodları :\r\n\r\n      //timeout=>konum alma süresi 20 saniye desek 20 saniye boyunca uğraşır\r\n      //maximumAge\r\n      //enableHighAccuraccy:true GPS kullanılacağı anlamına gelir\r\n    );\r\n  }\r\n\r\n  render() {\r\n    // KONUM ALMA\r\n    const {latitude, longitude, carParks, carPark1} = this.state;\r\n   const longitude1 =longitude\r\n   const latitude1 =latitude\r\n  {console.log(latitude1)}\r\n   \r\n    return (\r\n      <View style={styles.container}>\r\n    \r\n        <View style={{width: '100%', height: 48,backgroundColor:'#adf6d6'}}>\r\n          <View style={{alignItems: 'center',justifyContent: 'center'}}>\r\n          <Text style={({marginTop:-10,color: 'black', fontSize: 45})}>\r\n          ISTANBUL\r\n          </Text>\r\n          </View>\r\n          <TouchableOpacity onPress={()=>this.props.navigation.openDrawer()} style={{position:'absolute',right:'85%',top:'-10%'}}>\r\n    <Icon  name={Platform.OS === \"ios\" ? \"ios-add\" : \"menu-outline\"}\r\n  color=\"black\"\r\n  size={55}/>\r\n</TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={() => this.props.navigation.navigate('Login')}\r\n            style={{position: 'absolute', right: '0%', top: '-10%'}}>\r\n           <Image\r\n            source={require('../../../assets/TripLogo.png')}\r\n            resizeMode=\"center\"\r\n            style={styles.image2}\r\n          />\r\n          </TouchableOpacity>\r\n        </View>\r\n        {/* {alert( longitude, latitude)} */}\r\n        <MapView\r\n          style={styles.map}\r\n          provider={PROVIDER_GOOGLE}\r\n          region={{\r\n            latitude: Number(latitude),\r\n            longitude: Number(longitude),\r\n            latitudeDelta: 0.058,\r\n            longitudeDelta: 0.0581,\r\n          }}\r\n\r\n          //KONUM ALMA\r\n          // provider={PROVIDER_GOOGLE}\r\n          //         style={styles.map}\r\n          //         region={{\r\n          //             latitude:Number(latitude),\r\n          //             longitude:Number(longitude),\r\n          //             longitudeDelta:0.015,\r\n          //             latitudeDelta:0.0121\r\n          //         }}\r\n          //         showsUserLocation={true}\r\n        >\r\n          {/* <MapViewDirections\r\n            origin={{latitude:40.99449778084676,longitude:28.728089555825388}}\r\n            destination={{latitude:40.98449778084676,longitude: 28.788089555825388}}\r\n            apikey={'AIzaSyDQLdDbN44L1Im9dAHu06Fm_nt0qL5qxeA'}\r\n            strokeWidth={2}\r\n            strokeColor=\"blue\"\r\n           \r\n           \r\n           \r\n          /> */}\r\n          <Marker\r\n            pinColor={'blue'}\r\n            title={'KONUMUNUZ'}\r\n            opacity={1.5}\r\n            description={'Your Location'}\r\n            coordinate={{\r\n              latitude: Number(latitude),\r\n              longitude: Number(longitude),\r\n              latitudeDelta: 0.115,\r\n              longitudeDelta: 0.1121,\r\n            }}\r\n          />\r\n<Marker\r\n            pinColor={'#adf6d6'}\r\n            onPress={() => this.props.navigation.navigate('galataTower',{latitude2:latitude1,longitude2:longitude1})}\r\n            title={'Galata Kulesi'}\r\n            opacity={1.5}\r\n            description={'Galata Tower'}\r\n            coordinate={{\r\n              latitude: Number(latitude)-0.03,\r\n              longitude: Number(longitude)-0.01,\r\n              latitudeDelta: 0.115,\r\n              longitudeDelta: 0.1121,\r\n            }}\r\n          />\r\n          <Marker\r\n            pinColor={'teal'}\r\n            title={'Ayasofya Camii'}\r\n            onPress={()=>this.props.navigation.navigate('Ayasofya',{latitude2:latitude1,longitude2:longitude1})}\r\n            opacity={1.5}\r\n            description={'Ayasofya Mosque'}\r\n            coordinate={{\r\n              latitude: Number(latitude)-0.01,\r\n              longitude: Number(longitude)+0.02,\r\n              latitudeDelta: 0.115,\r\n              longitudeDelta: 0.1121,\r\n            }}\r\n          />\r\n           <Marker\r\n            pinColor={'teal'}\r\n            title={'Topkapı Sarayı'}\r\n            onPress={()=>this.props.navigation.navigate('Topkapi',{latitude2:latitude1,longitude2:longitude1})}\r\n            opacity={1.5}\r\n            description={'Topkapi Palace'}\r\n            coordinate={{\r\n              latitude: Number(latitude)-0.01,\r\n              longitude: Number(longitude)+0.025,\r\n              latitudeDelta: 0.115,\r\n              longitudeDelta: 0.1121,\r\n            }}\r\n          />\r\n          <Marker\r\n            pinColor={'teal'}\r\n            title={'Sultanahmet Camii'}\r\n            onPress={()=>this.props.navigation.navigate('Sultanahmet',{latitude2:latitude1,longitude2:longitude1})}\r\n            opacity={1.5}\r\n            description={'Blue Mosque'}\r\n            coordinate={{\r\n              latitude: Number(latitude)-0.009,\r\n              longitude: Number(longitude)+0.01,\r\n              latitudeDelta: 0.115,\r\n              longitudeDelta: 0.1121,\r\n            }}\r\n          />\r\n          \r\n           {/* <Marker\r\n            pinColor={'teal'}\r\n            title={'Taksim Meydanı'}\r\n            opacity={1.5}\r\n            description={'Taksim Square'}\r\n            coordinate={{\r\n              latitude: Number(latitude)-0.01,\r\n              longitude: Number(longitude)+0.02,\r\n              latitudeDelta: 0.115,\r\n              longitudeDelta: 0.1121,\r\n            }}\r\n          /> */}\r\n\r\n         \r\n          {/* \r\n           //CIRCLE\r\n\r\n\r\n<Circle\r\ncenter={{latitude:40.990109430171354,longitude: 28.72716037211094}}\r\nstrKAPATeWidth={3}\r\nstrKAPATeColor={\"red\"}\r\nfillColor={\"#246E73\"}\r\nradius={300}\r\n/> */}\r\n\r\n          {/* \r\n           //DRAGGABLE MARKERS\r\n\r\n// <Marker \r\n// draggable={true}\r\n// onDrag={(e)=>console.log(e.nativeEvent.coordinate)}\r\n// onDragStart={(e)=>console.log(`start:${e}`)}\r\n// onDragEnd={(e)=>alert(`Şu anki konum:${e.nativeEvent.coordinate.latitude} ${e.nativeEvent.coordinate.longitude}`)}\r\n// title={\"İÜC PARK\"}\r\n             \r\n//              description={\"Otopark\"}\r\n//              coordinate={\r\n//                  {\r\n//                     latitude:40.99449778084676\r\n//                     ,longitude:28.728089555825388\r\n//                     ,latitudeDelta:0.115\r\n//                     ,longitudeDelta:0.1121\r\n//                  }\r\n//              }>\r\n\r\n// <View style={{justifyContent:'center',alignItems:'center',width:30,height:30,backgroundColor:'red',borderRadius:50}}>\r\n// <Text style={{color:'white',padding:5,fontSize:15,justifyContent:'center',alignItems:'center'}}> 1 </Text>\r\n// </View>\r\n\r\n//              </Marker> */}\r\n             \r\n        </MapView>\r\n\r\n        \r\n{\r\n //GOOGLE DIRECTIONS ÜCRETLENDİRMESİ\r\n}\r\n\r\n\r\n{/* <MapViewDirections apikey={\"AIzaSyD5C0XB2nisaTgPaqeHzvwlzrN8gl19Hq4\"}\r\n\r\norigin={{latitude:40.99449778084676,longitude: 28.728089555825388}}\r\ndestination={{latitude:40.94449778084676,longitude: 28.735089555825388}}\r\n/> */}\r\n\r\n      </View>\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#F5FCFF',\r\n  },\r\n  container: {\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  map: {\r\n    flex: 1,\r\n  },\r\n  image2: {\r\n    \r\n    resizeMode: 'contain',\r\n    width: 50,\r\n    height: 50,\r\n    marginTop:5\r\n \r\n}\r\n});\r\n"]},"metadata":{},"sourceType":"script"}