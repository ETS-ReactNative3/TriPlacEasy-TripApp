{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Ionicons = _interopRequireDefault(require(\"react-native-vector-icons/Ionicons\"));\n\nvar _formik = require(\"formik\");\n\nvar Yup = _interopRequireWildcard(require(\"yup\"));\n\nvar _mobx = require(\"mobx\");\n\nvar _mobxReact = require(\"mobx-react\");\n\nvar _reactNativeLinearGradient = _interopRequireDefault(require(\"react-native-linear-gradient\"));\n\nvar _system = require(\"../config/system\");\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _reactNativeGoogleMapsDirections = _interopRequireDefault(require(\"react-native-google-maps-directions\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\VMByndR\\\\Trip\\\\screens\\\\homepage.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Login = function (_Component) {\n  (0, _inherits2.default)(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Login);\n    _this = _super.call(this);\n    _this.state = {};\n    return _this;\n  }\n\n  (0, _createClass2.default)(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        style: {\n          backgroundColor: '#80cbc4',\n          width: '100%',\n          height: '100%',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.ImageBackground, {\n        source: require('../assets/kapadokya2.jpg'),\n        resizeMode: \"cover\",\n        style: styles.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        source: require('../assets/trip1.png'),\n        resizeMode: \"center\",\n        style: styles.image2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: {\n          marginTop: 200\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: {\n          marginBottom: 25\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: (styles.textBody, {\n          color: 'white',\n          fontWeight: '700',\n          fontSize: 35\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }, \"L\\xFCtfen \\u015Eehir Se\\xE7iniz\")), _react.default.createElement(_reactNative.View, {\n        style: {\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('istGezilecek');\n        },\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          color: 'black',\n          fontWeight: '700',\n          fontSize: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, \"ISTANBUL\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('ankGezilecek');\n        },\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          color: 'black',\n          fontWeight: '700',\n          fontSize: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }, \"ANKARA\")))));\n    }\n  }]);\n  return Login;\n}(_react.Component);\n\nexports.default = Login;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  image2: {\n    resizeMode: 'contain',\n    width: '75%',\n    height: 165,\n    marginVertical: 10\n  },\n  image: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  textBody: {\n    fontFamily: 'Foundation',\n    fontSize: 16,\n    marginTop: 25,\n    marginBottom: 5,\n    color: 'white'\n  },\n  button: {\n    marginTop: 15,\n    backgroundColor: '#adf6d6',\n    borderRadius: 25,\n    paddingVertical: 15,\n    alignItems: 'center',\n    width: 175\n  },\n  icon: {\n    position: 'absolute',\n    right: 30,\n    top: 25\n  }\n});\n\n{}\n{}","map":{"version":3,"sources":["C:/Users/VMByndR/Trip/screens/homepage.js"],"names":["Login","state","backgroundColor","width","height","justifyContent","require","styles","image","image2","marginTop","marginBottom","textBody","color","fontWeight","fontSize","alignItems","props","navigation","navigate","button","Component","StyleSheet","create","container","flex","resizeMode","marginVertical","fontFamily","borderRadius","paddingVertical","icon","position","right","top"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Text,\r\n  TextInput,\r\n  Image,\r\n  Alert,\r\n  ImageBackground,\r\n  ScrollView,\r\n} from 'react-native';\r\n\r\n\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport {Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {observable} from 'mobx';\r\nimport {observer, inject} from 'mobx-react';\r\nimport {Touchable} from 'react-native';\r\nimport LinearGradient from 'react-native-linear-gradient';\r\n\r\nimport {API_URL} from '../config/system';\r\nimport axios from 'axios';\r\nimport getDirections from 'react-native-google-maps-directions'\r\n\r\nexport default class Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n   \r\n    };\r\n  }\r\n\r\n\r\n\r\n\r\n \r\n\r\n  render() {\r\n  \r\n   \r\n        \r\n    return (\r\n      <View style={{backgroundColor:'#80cbc4',width:'100%',height:'100%',justifyContent: 'center'}}>\r\n      <ImageBackground source={require('../assets/kapadokya2.jpg')} resizeMode=\"cover\" style={styles.image}>\r\n\r\n        \r\n       \r\n          <Image\r\n            source={require('../assets/trip1.png')}\r\n            resizeMode=\"center\"\r\n            style={styles.image2}\r\n          />\r\n\r\n          {/* <Text style={(styles.textBody, {color: '#adf6d6', fontSize: 45})}>\r\n            HOŞGELDİNİZ\r\n          </Text> */}\r\n\r\n          <View style={{marginTop: 200}} />\r\n          <View style={{marginBottom:25}}>\r\n          <Text style={(styles.textBody, {color: 'white',fontWeight:'700', fontSize: 35})}>\r\n            Lütfen Şehir Seçiniz\r\n          </Text>\r\n          </View>\r\n          <View style={{alignItems: 'center'}}>\r\n                  <TouchableOpacity\r\n                    onPress={()=>this.props.navigation.navigate('istGezilecek')}\r\n                    style={styles.button}>\r\n                    <Text style={{color: 'black',fontWeight:'700', fontSize: 30}}>ISTANBUL</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    onPress={()=>this.props.navigation.navigate('ankGezilecek')}\r\n                    style={styles.button}>\r\n                    <Text style={{color: 'black',fontWeight:'700', fontSize: 30}}>ANKARA</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n        \r\n        \r\n     \r\n        </ImageBackground>\r\n\r\n        </View>\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  image2: {\r\n  \r\n    resizeMode: 'contain',\r\n    width: '75%',\r\n    height: 165,\r\n    marginVertical: 10,\r\n  },\r\n  image: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    \r\n  },\r\n  textBody: {\r\n    fontFamily: 'Foundation',\r\n    fontSize: 16,\r\n    marginTop: 25,\r\n    marginBottom: 5,\r\n    color: 'white',\r\n  },\r\n\r\n  button: {\r\n    marginTop:15,\r\n    backgroundColor: '#adf6d6',\r\n    borderRadius: 25,\r\n    paddingVertical: 15,\r\n    alignItems: 'center',\r\n    width: 175,\r\n  },\r\n  icon: {position: 'absolute', right: 30, top: 25},\r\n});\r\n\r\n  {/* <Formik\r\n            initialValues={{\r\n              email: '',\r\n              password: '',\r\n            }}\r\n            onSubmit={this._handleSubmit}\r\n            validationSchema={Yup.object().shape({\r\n              email: Yup.string()\r\n                .email('*Lütfen Geçerli Bir Email Giriniz')\r\n                .required('*Lütfen Mailiniz Giriniz.'),\r\n              password: Yup.string().required('*Lütfen Şifrenizi Giriniz'),\r\n            })}>\r\n            {({values, handleChange, errors}) => (\r\n              <View>\r\n                <View style={styles.item}>\r\n                  <TextInput\r\n                    value={values.email}\r\n                    onChangeText={handleChange('email')}\r\n                    placeholder={'E-posta'}\r\n                    style={styles.input}\r\n                    keyboardType={'email-address'}></TextInput>\r\n\r\n                  {errors.email && (\r\n                    <Text style={{color: '#ab000d'}}> {errors.email} </Text>\r\n                  )}\r\n                </View>\r\n\r\n                <View style={styles.icon}>\r\n                  <Icon\r\n                    name={Platform.OS === 'ios' ? 'ios-add' : 'mail-outline'}\r\n                    //name={(this.state.hidePassword)?\"eye-off-outlane:eye-outlane\"}  şifre görünürlüğü açıp kapatma\r\n                    color=\"#003e47\"\r\n                    size={30}\r\n                  />\r\n                </View>\r\n                <View style={styles.item}>\r\n                  <TextInput\r\n                    value={values.password}\r\n                    onChangeText={handleChange('password')}\r\n                    placeholder={'Şifre'}\r\n                    style={styles.input}\r\n                    secureTextEntry={this.state.hidePassword}></TextInput>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() =>\r\n                      this.setState({hidePassword: !this.state.hidePassword})\r\n                    }\r\n                    style={{position: 'absolute', right: 30, top:25}}>\r\n                    <Icon\r\n                      name={\r\n                        this.state.hidePassword\r\n                          ? 'eye-off-outline'\r\n                          : 'eye-outline'\r\n                      }\r\n                      //name={(this.state.hidePassword)?\"eye-off-outlane:eye-outlane\"}  şifre görünürlüğü açıp kapatma\r\n                      color=\"blue\"\r\n                      size={30}\r\n                    />\r\n                  </TouchableOpacity>\r\n                  {errors.password && (\r\n                    <Text style={{color: '#ab000d'}}> {errors.password} </Text>\r\n                  )}\r\n                </View>\r\n\r\n                <View style={{alignItems: 'center'}}>\r\n                  <TouchableOpacity\r\n                    onPress={()=>this.props.navigation.navigate('map')}\r\n                    style={styles.button}>\r\n                    <Text style={{color: 'white',fontWeight:'700', fontSize: 20}}>Giriş</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    marginBottom: 20,\r\n                    alignItems: 'center',\r\n                    marginTop: 25,\r\n                  }}>\r\n                  <TouchableOpacity\r\n                    onPress={() => this.props.navigation.navigate('forgot')}>\r\n                    <Text\r\n                      style={{\r\n                        color: '#c62828',\r\n                        fontSize: 17,\r\n                        fontWeight: '700',\r\n                      }}>\r\n                      Şifremi Unuttum\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            )}\r\n          </Formik> */}\r\n{/* \r\n          <Text style={styles.textBody}>Veya kullanarak bağlan</Text>\r\n        \r\n          <View style={{alignItems: 'center'}}>\r\n          <TouchableOpacity onPress={()=>alert(\"Facebook'la Bağlanıyorsunuz\")} style={{position:'absolute',right:5,top:15}}>\r\n          <Image\r\n            source={require('../assets/face.png')}\r\n            resizeMode=\"center\"\r\n            style={{marginTop:-5,width:85,height:65}}\r\n          />\r\n</TouchableOpacity>\r\n<TouchableOpacity onPress={()=>this.handleGetDirections()} style={{position:'absolute',right:-85,top:15}}>\r\n<Image\r\n            source={require('../assets/google.png')}\r\n            resizeMode=\"center\"\r\n            style={{width:75,height:55}}\r\n          />\r\n</TouchableOpacity>\r\n          </View>\r\n          \r\n          <View style={{flexDirection: 'row', marginVertical: 5,marginTop:80}}>\r\n            <Text style={styles.textBody}>Hesabın Yok mu ? </Text>\r\n            <TouchableOpacity\r\n              onPress={() => this.props.navigation.navigate('SignUp')}>\r\n            \r\n              <Text style={[styles.textBody, {color: '#006978'}]}>\r\n                Hesap Oluştur\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View> */}"]},"metadata":{},"sourceType":"script"}