{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\VMByndR\\\\Trip\\\\node_modules\\\\react-native-countdown-timer-hooks\\\\index.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar CountDownTimer = (0, _react.forwardRef)(function (props, ref) {\n  var _useState = (0, _react.useState)(props.timestamp ? props.timestamp : 0),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      timeStamp = _useState2[0],\n      setTimeStamp = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(props.delay ? props.delay : 1000),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      delay = _useState4[0],\n      setDelay = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(props.days ? props.days : 0),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      days = _useState6[0],\n      setDays = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(props.hours ? props.hours : 0),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      hours = _useState8[0],\n      setHours = _useState8[1];\n\n  var _useState9 = (0, _react.useState)(props.minutes ? props.minutes : 0),\n      _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n      minutes = _useState10[0],\n      setMinutes = _useState10[1];\n\n  var _useState11 = (0, _react.useState)(props.seconds ? props.seconds : 0),\n      _useState12 = (0, _slicedToArray2.default)(_useState11, 2),\n      seconds = _useState12[0],\n      setSeconds = _useState12[1];\n\n  var _useState13 = (0, _react.useState)(true),\n      _useState14 = (0, _slicedToArray2.default)(_useState13, 2),\n      sendOnce = _useState14[0],\n      setSendOnce = _useState14[1];\n\n  var _useState15 = (0, _react.useState)(''),\n      _useState16 = (0, _slicedToArray2.default)(_useState15, 2),\n      finalDisplayTime = _useState16[0],\n      setFinalDisplayTime = _useState16[1];\n\n  useInterval(function () {\n    if (timeStamp > 0) {\n      setTimeStamp(timeStamp - 1);\n    } else if (sendOnce) {\n      if (props.timerCallback) {\n        props.timerCallback(true);\n      } else {\n        console.log('Please pass a callback function...');\n      }\n\n      setSendOnce(false);\n    }\n\n    var delta = timeStamp;\n    var days = Math.floor(delta / 86400);\n    delta -= days * 86400;\n    var hours = Math.floor(delta / 3600) % 24;\n    delta -= hours * 3600;\n    var minutes = Math.floor(delta / 60) % 60;\n    delta -= minutes * 60;\n    var seconds = delta % 60;\n    setDays(days);\n    setHours(hours);\n    setMinutes(minutes);\n    setSeconds(seconds);\n    var hr = hours < 10 ? \"0\" + hours : hours;\n    var min = minutes < 10 ? \"0\" + minutes : minutes;\n    var sec = seconds < 10 ? \"0\" + seconds : seconds;\n    var displayTime = '';\n\n    if (days !== 0) {\n      displayTime = days + \":\" + hr + \":\" + min + \":\" + sec;\n    }\n\n    if (days === 0 && hours !== 0) {\n      displayTime = hr + \":\" + min + \":\" + sec;\n    }\n\n    if (hours === 0 && minutes !== 0) {\n      displayTime = min + \":\" + sec;\n    }\n\n    if (minutes === 0 && seconds !== 0) {\n      displayTime = min + \":\" + sec;\n    }\n\n    setFinalDisplayTime(displayTime);\n  }, delay);\n  var refTimer = (0, _react.useRef)();\n  (0, _react.useImperativeHandle)(ref, function () {\n    return {\n      resetTimer: function resetTimer() {\n        setDays(props.days);\n        setHours(props.hours);\n        setMinutes(props.minutes);\n        setSeconds(props.seconds);\n        setTimeStamp(props.timestamp);\n        setSendOnce(true);\n      }\n    };\n  });\n  return _react.default.createElement(_reactNative.View, {\n    ref: refTimer,\n    style: props.containerStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: props.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, finalDisplayTime));\n});\n\nfunction useInterval(callback, delay) {\n  var savedCallback = (0, _react.useRef)();\n  (0, _react.useEffect)(function () {\n    savedCallback.current = callback;\n  }, [callback]);\n  (0, _react.useEffect)(function () {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      var id = setInterval(tick, delay);\n      return function () {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n\nvar _default = CountDownTimer;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/VMByndR/Trip/node_modules/react-native-countdown-timer-hooks/index.js"],"names":["CountDownTimer","props","ref","timestamp","timeStamp","setTimeStamp","delay","setDelay","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","sendOnce","setSendOnce","finalDisplayTime","setFinalDisplayTime","useInterval","timerCallback","console","log","delta","Math","floor","hr","min","sec","displayTime","refTimer","resetTimer","containerStyle","textStyle","callback","savedCallback","current","tick","id","setInterval","clearInterval"],"mappings":"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","sourcesContent":["/**\n * CountDownTimer Component\n */\n\nimport React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from 'react';\nimport { Text, View } from 'react-native';\n\nconst CountDownTimer = forwardRef((props, ref) => {\n  // For Total seconds\n  const [timeStamp, setTimeStamp] = useState(props.timestamp ? props.timestamp : 0);\n  // Delay Required\n  const [delay, setDelay] = useState(props.delay ? props.delay : 1000);\n\n  // For days, hours, minutes and seconds\n  const [days, setDays] = useState(props.days ? props.days : 0);\n  const [hours, setHours] = useState(props.hours ? props.hours : 0);\n  const [minutes, setMinutes] = useState(props.minutes ? props.minutes : 0);\n  const [seconds, setSeconds] = useState(props.seconds ? props.seconds : 0);\n\n  // Flag for informing parent component when timer is over\n  const [sendOnce, setSendOnce] = useState(true);\n\n  // Flag for final display time format\n  const [finalDisplayTime, setFinalDisplayTime] = useState('');\n\n  useInterval(() => {\n    if (timeStamp > 0) {\n      setTimeStamp(timeStamp - 1);\n    } else if (sendOnce) {\n      if (props.timerCallback) {\n        props.timerCallback(true);\n      } else {\n        console.log('Please pass a callback function...');\n      }\n      setSendOnce(false);\n    }\n\n    let delta = timeStamp;\n\n    // calculate (and subtract) whole days\n    let days = Math.floor(delta / 86400);\n    delta -= days * 86400;\n\n    // calculate (and subtract) whole hours\n    let hours = Math.floor(delta / 3600) % 24;\n    delta -= hours * 3600;\n\n    // calculate (and subtract) whole minutes\n    let minutes = Math.floor(delta / 60) % 60;\n    delta -= minutes * 60;\n\n    // what's left is seconds\n    let seconds = delta % 60;\n\n    setDays(days);\n    setHours(hours);\n    setMinutes(minutes);\n    setSeconds(seconds);\n\n    // Formatting Time for Display Purpose\n    const hr = hours < 10 ? `0${hours}` : hours;\n    const min = minutes < 10 ? `0${minutes}` : minutes;\n    const sec = seconds < 10 ? `0${seconds}` : seconds;\n\n    let displayTime = '';\n\n    if (days !== 0) {\n      displayTime = `${days}:${hr}:${min}:${sec}`;\n    }\n\n    if (days === 0 && hours !== 0) {\n      displayTime = `${hr}:${min}:${sec}`;\n    }\n\n    if (hours === 0 && minutes !== 0) {\n      displayTime = `${min}:${sec}`;\n    }\n\n    if (minutes === 0 && seconds !== 0) {\n      displayTime = `${min}:${sec}`;\n    }\n\n    setFinalDisplayTime(displayTime);\n  }, delay);\n\n  const refTimer = useRef();\n  useImperativeHandle(ref, () => ({\n    resetTimer: () => {\n      // Clearing days, hours, minutes and seconds\n      setDays(props.days);\n      setHours(props.hours);\n      setMinutes(props.minutes);\n      setSeconds(props.seconds);\n      // Clearing Timestamp\n      setTimeStamp(props.timestamp);\n      setSendOnce(true);\n    },\n  }));\n\n  return (\n    <View ref={refTimer} style={props.containerStyle}>\n      <Text style={props.textStyle}>{finalDisplayTime}</Text>\n    </View>\n  );\n});\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest function.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n\nexport default CountDownTimer;\n"]},"metadata":{},"sourceType":"script"}